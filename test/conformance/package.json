{
  "dependencies": {
    "@openfunction/functions-framework": "file:../../",
    "concurrently": "file:../../node_modules/concurrently",
    "debug": "file:../../node_modules/debug",
    "env-cmd": "file:../../node_modules/env-cmd",
    "wait-on": "file:../../node_modules/wait-on"
  },
  "scripts": {
    "start": "functions-framework --target=writeHttp",
    "compile": "cd .. && npm run compile",
    "knative:async:binding_pubsub": "npm run compile && concurrently npm:knative:async:binding_pubsub:run:* npm:knative:async:binding_pubsub:test",
    "knative:async:binding_pubsub:run:func": "cross-env DEBUG=test:*,common:*,ofn:* env-cmd -e knative functions-framework --signature-type=openfunction --target=tryKnativeAsyncBindingAndPubSub",
    "knative:async:binding_pubsub:run:dapr": "dapr run -H 3500 -d ../data/components/http --log-level warn",
    "knative:async:binding_pubsub:test": "wait-on tcp:3500 tcp:8080 && curl -s -d '{\"data\": \"hello\"}' -H 'Content-Type: application/json' localhost:8080",
    "knative:async:state:run:docker":"docker run --name myredis --rm -d -p 6379:6379 redis/redis-stack-server:latest",
    "knative:async:state:run:dapr":"dapr run -H 3500 -d ../data/components/state --log-level warn",
    "knative:async:state:run:func:save": "cross-env DEBUG=test:*,common:*,ofn:* env-cmd -e knative functions-framework --signature-type=openfunction --target=tryKnativeAsyncStateSave",
    "knative:async:state:run:test:save": "wait-on tcp:3500 tcp:8080 && curl -s -d '{\"dataObjects\": [{\"key\": \"1\",\"value\": {\"person\": {\"org\": \"Dev Ops\",\"id\": 1036},\"city\": \"Seattle\",\"state\": \"WA\"}},{\"key\": \"2\",\"value\": {\"person\": {\"org\": \"Hardware\",\"id\": 1028},\"city\": \"Portland\",\"state\": \"OR\"}}]}' -H 'Content-Type: application/json' localhost:8080",
    "knative:async:state:run:func:get": "cross-env DEBUG=test:*,common:*,ofn:* env-cmd -e knative functions-framework --signature-type=openfunction --target=tryKnativeAsyncStateGet",
    "knative:async:state:run:test:get":"wait-on tcp:3500 tcp:8080 && curl -s -d '{\"key\": \"1\"}' -H 'Content-Type: application/json' localhost:8080",
    "knative:async:state:run:func:getBulk":"cross-env DEBUG=test:*,common:*,ofn:* env-cmd -e knative functions-framework --signature-type=openfunction --target=tryKnativeAsyncStateGetBulk",
    "knative:async:state:run:test:getBulk":"wait-on tcp:3500 tcp:8080 && curl -s -d '{\"keys\": [\"1\", \"2\"], \"parallelism\": 10}' -H 'Content-Type: application/json' localhost:8080",
    "knative:async:state:run:func:delete":"cross-env DEBUG=test:*,common:*,ofn:* env-cmd -e knative functions-framework --signature-type=openfunction --target=tryKnativeAsyncStateDelete",
    "knative:async:state:run:test:delete":"wait-on tcp:3500 tcp:8080 && curl -s -d '{\"key\": \"1\"}' -H 'Content-Type: application/json' localhost:8080",
    "knative:async:state:run:func:transaction":"cross-env DEBUG=test:*,common:*,ofn:* env-cmd -e knative functions-framework --signature-type=openfunction --target=tryKnativeAsyncStateTransaction",
    "knative:async:state:run:test:transaction":"wait-on tcp:3500 tcp:8080 && curl -s -d '{\"operations\": [{\"operation\": \"delete\", \"request\": {\"key\": \"2\"}}, {\"operation\": \"upsert\", \"request\": {\"key\": \"1\", \"value\": {\"person\": {\"org\": \"Dev Ops\", \"id\": 1036}, \"city\": \"Seattle\", \"state\": \"WA\"}}}]}' -H 'Content-Type: application/json' localhost:8080",
    "knative:async:state:run:func:query":"cross-env DEBUG=test:*,common:*,ofn:* env-cmd -e knative functions-framework --signature-type=openfunction --target=tryKnativeAsyncStateQuery",
    "knative:async:state:run:test:query":"wait-on tcp:3500 tcp:8080 && curl -s -d '{\"query\": {\"filter\": {\"EQ\": {\"state\": \"CA\"}}, \"sort\": [{\"key\": \"person.id\", \"order\": \"DESC\"}], \"page\": {\"limit\": 1}}}' -H 'Content-Type: application/json' localhost:8080",
    "async": "npm run compile && concurrently npm:async:run:*",
    "async:run:func": "cross-env DEBUG=test:*,common:*,ofn:* env-cmd -e async functions-framework --target=tryAsync",
    "async:run:dapr": "dapr run -H 3500 -p 8080 -d ../data/components/cron --log-level info"
  }
}
