apiVersion: apps/v1
kind: Deployment
metadata:
  name: knative-openfunction-bindings-deployment
  labels:
    app: knative-openfunction-bindings
    case: knative
spec:
  replicas: 1
  selector:
    matchLabels:
      app: knative-openfunction-bindings
      case: knative
  template:
    metadata:
      labels:
        app: knative-openfunction-bindings
        case: knative
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "knative-openfunction-bindings-app"
        dapr.io/app-port: "8080"
        dapr.io/log-as-json: "true"
        dapr.io/app-protocol: "http" # GRPC is not well supported so far in Dapr Node.js SDK
    spec:
      containers:
        - name: my-knative-openfunction-bindings
          image: knative-openfunction-bindings:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: function-port
              protocol: TCP
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: knative-openfunction-bindings-component
spec:
  type: bindings.kafka
  version: v1
  metadata:
    - name: brokers  # Required.
      value: kafka-server-kafka-brokers:9092
    - name: consumerGroup # Optional. Used for input bindings.
      value: knative-openfunction-bindings
    - name: topics # Optional. Used for input bindings.
      value: bindings-topic
    - name: publishTopic # Optional. Used for output bindings.
      value: bindings-topic
    - name: authRequired # Required.
      value: false
---
apiVersion: v1
kind: Service
metadata:
  name: knative-openfunction-bindings-service
spec:
  type: NodePort
  selector:
    app: knative-openfunction-bindings
  ports:
    - protocol: TCP
      port: 12345
      targetPort: 8080
      nodePort: 31234